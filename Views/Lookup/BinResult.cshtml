@*@model LookupBin*@
@model LookupBin_

    <style>
        @@media only screen and (max-width: 500px) {
            #card-header {
                font-size: .75rem;
            }

            .card-title {
                font-size: .65rem;
            }

            .card-text {
                font-size: .65rem;
            }

            .sub-header {
                font-size: .65rem;
                font-weight: bolder;
            }

            .inner-card-text {
                font-size: .65rem;
            }
        }
    </style>

    <div class="text-end">
        @await Html.PartialAsync("MoveMenu", new MoveMenuModel(Model.BinCode, null, null, null, null))
    </div>

    @foreach (var item in Model.BinLookupResults.Bin.Item)
    {
        <div class="card m-2 border-dark">
            <div class="card-body">
                <div id="card-header" class="d-flex flex-wrap row">
                    <h5 class="card-title fw-bold col-3">
                        Item
                        <span class="fw-normal">#@item.ItemNo</span>
                    </h5>
                    <p class="card-text fw-bold col-6">
                        Description:
                        <span class="fw-normal">@item.ItemDescription</span>
                    </p>
                    <p class="card-text fw-bold col-3">
                        Lots:
                        <span class="fw-normal">@item.Lot.Count()</span>
                    </p>
                </div>
                <div class="d-flex flex-wrap row">

                </div>
                <div class="d-flex flex-wrap row">
                    @foreach (var lot in item.Lot)
                    {
                        var exp = DateTime.TryParse(lot.ExpirationDate.ToString(), out DateTime e) ? e : DateTime.MinValue;
                        var onHold = lot.OnHold.ToUpper() == "YES";
                        var isExp = exp < DateTime.Now;
                        var css = onHold ? "alert alert-warning p-1" : "";

                        <div class="card col-12 border-success p-2 mb-1 @css">
                            <div class="row">
                                <h6 class="col-4 sub-header"><span class="fw-normal">Lot #</span> @lot.LotNo</h6>
                                <h6 class="col-4 sub-header"><span class="fw-normal">Qty:</span> @lot.LotQuantityBase</h6>
                                <h6 class=" col-4 sub-header">
                                    <span class="fw-normal">Expires:</span> @lot.ExpirationDate
                                    @if (onHold)
                                    {
                                        <span class="badge bg-warning text-danger">On Hold</span>
                                        <TEXT>&nbsp;</TEXT>
                                    }
                                </h6>
                            </div>
                            <div>
                                <h6 class="sub-header">Packages:</h6>
                                <div class="d-flex flex-wrap justify-content-sm-start">
                                    @foreach (var package in lot.Package)
                                    {
                                        <span class="inner-card-text badge bg-secondary m-1">
                                        <a class="text-light" href="@Url.Action("Index", new { number = package.PackageNo })">
                                            @(string.IsNullOrEmpty(package.PackageNo) ? "(n/a)" : package.PackageNo): @package.PackageQuantityBase
                                            </a>
                                        </span>
                                    }
                                </div>
                            </div>
                            <div class="text-end">
                                @await Html.PartialAsync("MoveMenu", new MoveMenuModel(Model.BinCode, null, item.ItemNo.ToString(), lot.LotNo.ToString(), decimal.Parse(string.IsNullOrEmpty(lot.LotQuantityBase) ? "0" : lot.LotQuantityBase)))
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    }